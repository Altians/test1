#端口
server:
  port: 8080


#多数据源配置
spring:
  datasource:
#    type: com.baomidou.dynamic.datasource.DynamicRoutingDataSource
    dynamic:
      primary: master #设置默认的数据源或者数据源组,默认值即为master
      strict: false #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      druid:
        initial-size: 20
        max-active: 100
        min-idle: 20
        max-wait: 5000
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
      datasource:
        master:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/sale_center?useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
          username: root
          password: root
        slave:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/tailg_bbs?useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
          username: root
          password: root
    druid:
#      driver-class-name: oracle.jdbc.driver.OracleDriver
      # 配置连接池的过滤器，可用的过滤器如下：
      # stat: 统计 JDBC 的执行信息，包括执行的 SQL、执行时间等。
      # wall: 对 SQL 进行防火墙过滤，防止 SQL 注入。
      # log4j: 对执行的 SQL 进行日志输出，便于调试。
      filters: stat,wall,log4j
      # 配置 Drud 的监控后台 Servlet，这里设置为启用。
      stat-view-servlet:
        # 启用
        enabled: true
        # 设置 StatViewServlet 的访问路径，即http://localhost:8080/druid
        url-pattern: /druid/*
        # 账号
        login-username: admin
        # 密码
        login-password: admin
        # 是否允许 Druid 进行重置 Operation。
        reset-enable: true
        # 白名单 多个 IP 使用 “,” 分隔。
        allow: 127.0.0.1
      filter:
        stat:
          # 记录慢 SQL 日志，slow-sql-millis 配置了该阈值，超过该阈值的 SQL记录在慢日志中。
          log-slow-sql: true
          # 阈值1000ms
          slow-sql-millis: 1000


#mybatis-plus相关配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml #扫描mapper下的所有xml文件
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #type-aliases-package: com.zwl.entity   #扫描实体类包/配置别名
#logging:
#  level:
#    com.baomidou.mybatisplus: debug